1-如何保证消息的可靠性？
    消息的生产者设置持久化，默认是持久化（Queue默认是持久化的）
    producer.setDeliveryMode(DeliveryMode.PERSISTENT);

    开启事务，开启事务后session.commit();才会正常发送，事务偏生产者
    抛出异常可以通过session.rollback();进行回滚

    开启签收模式，Session.CLIENT_ACKNOWLEDGE，手动签收
    消费完成后调用message.acknowledge();手动签收确认消费成功


2-持久化消息
    Step-1：拷贝mysql-connector-java-5.1.38.jar到activemq解压目录中/lib文件夹下
    Step-2：修改配置文件，activemq.xml
            <bean id="mysql-ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
            			<property name="driverClassName" value="com.mysql.jdbc.Driver" />
            			<property name="url" value="jdbc:mysql://192.168.0.123:3306/activemq" />
            			<property name="username" value="root" />
            			<property name="password" value="Ahutyh123!"/>
            			<property name="maxTotal" value="200"/>
            			<property name="poolPreparedStatements" value="true"/>
            </bean>
            # 这个bean配置标签需要放在</broker>之后，<import jetty.xml>之前
            <persistenceAdapter>
                    <!-- <kahaDB directory="${activemq.data}/kahadb"/>-->
                    <jdbcPersistenceAdapter dataSource="#mysql-ds" createTablesOnStartup="true"/>
            </persistenceAdapter>

    Step-3：建库activemq
    Step-4：cd进入activemq/bin目录下，./activemq start启动activemq，查看数据库建表成功


 3-Zookeeper+Replicated LevelDB Store，搭建ActiveMQ集群
    Step-1：启动Zookeeper集群
    Step-2：将ActiveMQ解压文件拷贝到3台机器上
    Step-3：修改activemq.xml中<broker>标签中，brokerName属性，要相同
    Step-4：修改activemq.xml中的持久化方案
            <persistenceAdapter>
                <replicatedLevelDB
                  directory="${activemq.data}/leveldb"
                  replicas="3"
                  bind="tcp://0.0.0.0:63631"
                  zkAddress="192.168.0.120:2181,192.168.0.121:2181,192.168.0.122:2181"
                  zkPath="/activemq/leveldb-stores"
                  hostname="mini3"
                  />
            </persistenceAdapter>
    Step-5：启动activemq
    Step-6：./zkCli.sh -server mini1:2181，通过这个命令查看zk上是否有activemq的数据
