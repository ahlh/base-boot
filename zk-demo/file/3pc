三阶段提交算法——3PC
阶段一：Can Commit
1、事务询问：协调者向所有参与者发送一个包含事务内容的Can commit请求，询问是否可以执行事务提交操作，并开始等待各个参与者的响应
2、参与者向协调者反馈事务询问的响应：参与者在接受到来自协调者的Can Commit请求后，正常情况下，如果自身认为可以提交则反馈Yes并进入预备状态，否则反馈No

阶段二：Pre Commit
协调者根据各个参与者的反馈情况来决定是否可以进行Pre Commit操作，正常情况下，包含两种可能
一、执行事务预提交（所有参与者均反馈Yes）
1、发送预提交请求：协调者向所有参与者发送Pre Commit请求
2、事务预提交：参与者接收到Pre Commit请求后执行事务操作，并将undo和redo信息记录到事务日志中
3、各参与者向协调者反馈事务执行的响应：如果参与者成功执行了事务操作就向协调者发送Ack消息，同时等待最终的指令：commit或者abort
二、中断事务（一个或以上的参与者反馈No）
1、发送中断请求：协调者向所有的参与者发送Abort请求
2、中断事务：参与者受到Abort请求后中断事务

阶段三：Do Commit
该阶段进行真正的事务提交，可能包含两种可能
一、执行事务提交（所有参与者反馈Yes并已经执行成功Pre Commit）
1、发送提交请求：协调者向所有参与者发送do commit请求
2、事务提交：参与者接受到do commit请求后会正式进行事务提交操作，完成事务提交操作后释放资源
3、反馈事务提交结果：参与者提交成功事务后，向协调者发送Ack消息
4、完成事务
二、中断事务（一个或多个参与者反馈No）
1、发送中断请求：协调者向所有参与者发送abort请求
2、事务回滚：参与者接受到abort请求后，利用之前记录的undo日志来执行事务回滚操作，并在完成事务回滚之后释放资源
3、反馈事务回滚结果：完成回滚后向协调者发送Ack消息
4、中断事务

优点：相对于两阶段提交降低了参与者的阻塞范围并且能够在单点故障后继续达成一致
缺点：存在数据不一致问题
