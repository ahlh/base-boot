ZAB协议
ZAB（Zookeeper Atomic Broadcast,Zookeeper原子广播协议）是为Zookeeper 专门设计的一种支持崩溃恢复的原子广播协议
基于ZAB协议，Zookeeper实现了一种主备模式的系统架构来保持集群中各副本之间的数据的一致性，Zookeeper使用一个单一的主进程来接收并处理客户端的所有事务请求，并采用ZAB协议将服务器数据状态变更已事务的形式广播到所有的副本进程上去
ZAB协议的核心：所有事务请求必须由一个全局唯一的服务器来协调处理，这个协调服务器称为Leader，余下的所有服务器称为Follower。Leader服务器负责将一个客户端请求转换成一个事务Proposal，并将该Proposal分发给集群中所有的Follower服务器，之后Leader服务器收集所有Follower的反馈，一旦超过半数的Follower服务器进行了正确的反馈后，那么Leader就会再次向所有的Follower服务器分发Commit消息，要求其将前一个Proposal进行提交。

ZAB协议的两种模式：
崩溃恢复模式、消息广播模式
1-什么情况下进入崩溃恢复模式？
当整个ZooKeeper集群启动时，或者当Leader服务器出现网络中断、崩溃退出与重启等网络异常情况时，或者集群中已经不存在过半的机器与Leader服务器保持正常的通信，ZooKeeper集群进入崩溃恢复模式并选举产生新的Leader
2-什么情况下进入消息广播模式？
当选举产生了新的Leader后，同时集群中有一半以上的机器与该leader完成了状态同步后，ZooKeeper集群就退出了崩溃恢复模式，进入消息广播模式；已经有过半的Follower完成与Leader的状态同步，那么整个集群就进入消息广播模式

消息广播流程
1、客户端发送事务请求
2、发送到Leader或者Follower转发到Leader
3、Leader将为请求生成一个Proposal并将Proposal发送给集群中所有其他机器
4、Follower响应Proposal，发送一个Ack消息给Leader
5、Leader收到超过半数（包括自己）的Ack响应后广播一个Commit消息给所有的Follower通知其进行事务提交
6、Leader自身进行事务提交

崩溃恢复流程
Leader崩溃，过半的Follower与Leader失去联系就进入崩溃恢复模式
Leader选举算法必须保证新选举出来的Leader服务器拥有集群中所有机器最高编号（即ZXID最大）的事务Proposal，那么就可以保证这个新选举出来的Leader一定具有已经提交的所有的提案

正常的数据同步流程
完成Leader选举之后，正常工作之前，Leader会首先确认事务日志中所有的Proposal是否都已经被集群中过半的机器提交了，即确认是否已经完成数据同步。数据同步过程如下：
1、Leader服务器为每一个Follower服务器准备一个队列，将那些没有被Follower同步的事务一Proposal消息的形式逐个发送给Follower服务器，并在每个Proposal后跟一个Commit消息，表示该事务已经被提交
2、所有未同步的事务同步完成并成功应用到本地数据库后，Leader服务器就会将该Follower加入到真正的可用的Follower列表中，之后开始其他流程

异常的数据同步流程
ZAB协议中ZXID编号规则：ZXID是一个64位的数字，前32位表示周期的编号，每次进行Leader选举，周期编号加1，后32位表示该周期内客户端提交事务计数器，每提交一个请求，该计数器加1。
每次Leader选举，Leader必然是拥有集群中所有机器最高编号ZXID事务的机器
当一个包含上一个周期未提交的事务的服务器启动后，集群中肯定存在这样的机器：最大的ZXID中的周期编号大于上一个周期编号，所以一个包含上一个周期未提交事务的服务器启动后肯定不会成为Leader。这台机器启动后，作为Follower与Leader进行数据同步，Leader会根据自己服务器上最后被提交的Proposal来和Follower服务器上的Proposal做对比，比对的结果必然是Leader要求Follower进行一个回退操作
